{"version":3,"file":"webstorage.utility.js","sourceRoot":"","sources":["../../src/utility/webstorage.utility.ts"],"names":[],"mappings":"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","sourcesContent":["import {WEBSTORAGE_CONFIG} from '../index';\nimport * as CryptoJS from 'crypto-js';\n\nexport class WebStorageUtility {\n    static generateStorageKey(key: string): string {\n        if (WEBSTORAGE_CONFIG.secretKey) {\n            return `${WEBSTORAGE_CONFIG.prefix}enc_${key}`;\n        }\n        return `${WEBSTORAGE_CONFIG.prefix}${key}`;\n    }\n\n    static get(storage: Storage, key: string): any {\n        const storageKey = WebStorageUtility.generateStorageKey(key);\n        let value = storage.getItem(storageKey);\n        if (WEBSTORAGE_CONFIG.secretKey && value !== null) {\n            value = this.decrypt(value, WEBSTORAGE_CONFIG.secretKey) || '';\n        }\n        return WebStorageUtility.getGettable(value);\n    }\n\n    static set(storage: Storage, key: string, value: any): void {\n        const storageKey = WebStorageUtility.generateStorageKey(key);\n        let strValue = WebStorageUtility.getSettable(value);\n        if (WEBSTORAGE_CONFIG.secretKey) {\n            strValue = this.encrypt(strValue, WEBSTORAGE_CONFIG.secretKey);\n        }\n        storage.setItem(storageKey, strValue);\n    }\n\n    static remove(storage: Storage, key: string): void {\n        let storageKey = WebStorageUtility.generateStorageKey(key);\n\n        storage.removeItem(storageKey);\n    }\n\n    private static getSettable(value: any): string {\n        return typeof value === \"string\" ? value : JSON.stringify(value);\n    }\n\n    private static getGettable(value: string): any {\n        if (value === 'undefined') return undefined;\n        try {\n            return JSON.parse(value);\n        } catch(e) {\n            return value;\n        }\n    }\n\n    private static encrypt(value: string, password: string): string {\n        // Prepend sha256(value) to the value, we can use it to verify the decrypted result.\n        const newValue = CryptoJS.SHA256(value).toString() + value;\n        return CryptoJS.AES.encrypt(newValue, password).toString();\n    }\n\n    // Returns null if the password was incorrect.\n    private static decrypt(value: string, password: string): string {\n        const decrypted = CryptoJS.AES.decrypt(value, password).toString(CryptoJS.enc.Utf8);\n        if (decrypted.length < 64) {\n            return null;\n        }\n        const sha256 = decrypted.substr(0, 64);\n        const realValue = decrypted.substr(64);\n        if (CryptoJS.SHA256(realValue).toString() !== sha256) {\n            return null;\n        }\n        return realValue;\n    }\n}\n"]}